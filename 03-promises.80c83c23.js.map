{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAASC,SAASC,cAAc,SAUtC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,G,OAC3BC,YAAW,W,OAAMN,EACbI,EAAQ,CAAEN,WAAUC,UACpBM,EAAO,CAAEP,WAAUC,S,GACrBA,E,IAgBN,SAASQ,EAASC,EAAGC,GACnB,IAAMC,EAAW,IAAIC,SAASF,GACxBG,EAAiB,GAEvBJ,EAAEK,iB,IAnCmBC,EAAEf,EAAOgB,EAAMC,EAoC/BC,GAAU,EAAVC,GAAU,EAAVC,OAAUC,E,IAAf,QAAKC,EAAAC,EAAcZ,EAASa,UAASC,OAAAC,cAAhCR,GAAAI,EAAAC,EAAUI,QAAAC,MAAVV,GAAU,GAAV,IAAMW,EAANP,EAAUQ,MACbjB,EAAegB,EAAK,IAAME,SAASF,EAAK,G,WADrCV,GAAU,EAAVC,EAAUY,C,aAAVd,GAAU,MAAVK,EAAUU,QAAVV,EAAUU,Q,YAAVd,E,MAAAC,C,GApCkBpB,GAAFe,EAwCHF,GAxCKb,MAAOgB,EAATD,EAASC,KAAMC,EAAfF,EAAeE,OAChCjB,EAAQ,GAAKgB,EAAO,GAAKC,EAAS,GAwCpCiB,EAAAzC,GAAS0C,OAAOC,QAAQ,6BAtB5B,SAA2BC,GACzB,I,IAD2BC,EAAFD,EAAErC,MAAOgB,EAATqB,EAASrB,KAAMC,EAAfoB,EAAepB,OAC/BsB,EAAQ,EAAGA,EAAQtB,EAAQsB,IAClCzC,EAAcyC,EAAQ,EAAGD,EAAQtB,EAAOuB,GACrCC,MAAK,SAAAzB,G,IAAGhB,EAAQgB,EAARhB,SAAUC,EAAKe,EAALf,MACjBkC,EAAAzC,GAAS0C,OAAOM,QAAQ,qBAAoCC,OAAf3C,EAAS,QAAY2C,OAAN1C,EAAM,M,IAEnE2C,OAAM,SAAA5B,G,IAAGhB,EAAQgB,EAARhB,SAAUC,EAAKe,EAALf,MAClBkC,EAAAzC,GAAS0C,OAAOC,QAAQ,oBAAmCM,OAAf3C,EAAS,QAAY2C,OAAN1C,EAAM,M,IAmBvE4C,CAAkB/B,E,CAGpBlB,EAAOkD,iBAAiB,UAAU,SAACpC,G,OAAMD,EAASC,EAAGd,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst formEl = document.querySelector('.form');\n\nfunction isValidFields({ delay, step, amount }) {\n  if (delay < 0 || step < 0 || amount < 1) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) =>\n    setTimeout(() => shouldResolve\n      ? resolve({ position, delay })\n      : reject({ position, delay }),\n      delay)\n  );\n}\n\nfunction generatorPromises({ delay, step, amount }) {\n  for (let index = 0; index < amount; index++) {\n    createPromise(index + 1, delay + step * index)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction onSubmit(e, formEl) {\n  const formData = new FormData(formEl);\n  const configPromises = {};\n\n  e.preventDefault();\n  for (const pair of formData.entries()) {\n    configPromises[pair[0]] = parseInt(pair[1]);\n  }\n\n  if (isValidFields(configPromises)) {\n    Notiflix.Notify.failure('Please enter correct data');\n    return;\n  }\n\n  generatorPromises(configPromises);\n}\n\nformEl.addEventListener('submit', (e) => onSubmit(e, formEl));"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$onSubmit","e","formEl1","formData","FormData","configPromises","preventDefault","param","step","amount","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","Symbol","iterator","next","done","pair","value","parseInt","err","return","$parcel$interopDefault","Notify","failure","param1","delay1","index","then","success","concat","catch","$ce04d3a99e08e73b$var$generatorPromises","addEventListener"],"version":3,"file":"03-promises.80c83c23.js.map"}